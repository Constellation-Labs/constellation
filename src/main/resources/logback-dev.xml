<configuration>
    <jmxConfigurator/>

    <appender name="metrics" class="io.prometheus.client.logback.InstrumentedAppender" />

    <property name="HOME_LOG" value="logs/app.log"/>
    <property name="HOME_ROLLING_LOG" value="logs/archived/app.%d{yyyy-MM-dd}.%i.log.gz"/>
    <property name="JSON_LOG" value="logs/json_logs/dag.log"/>
    <property name="JSON_ROLLING_LOG" value="logs/json_logs/dag.%d{yyyy-MM-dd_HH}.%i.log"/>

    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${HOME_ROLLING_LOG}</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <totalSizeCap>2GB</totalSizeCap>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date [%thread] [%X{node_id}] %highlight(%-5level) %cyan(%logger{15}) - %msg %n</pattern>
        </encoder>
    </appender>

    <appender name="jsonFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <file>${JSON_LOG}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${JSON_ROLLING_LOG}</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <totalSizeCap>2GB</totalSizeCap>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <includeCallerData>true</includeCallerData>
        </encoder>
    </appender>

    <logger name="org.constellation" level="debug">
        <appender-ref ref="rollingFile" />
        <appender-ref ref="jsonFile" />
    </logger>

    <root level="info">
        <appender-ref ref="metrics" />
    </root>

</configuration>