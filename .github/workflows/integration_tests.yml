name: Integration tests

on:
  workflow_dispatch:
    inputs:
      nodeCount:
        description: 'Number of nodes in a cluster'
        required: false
        default: '4'

jobs:
  test:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25
          terraform_wrapper: false # wrapper would print out terraform command to stdout first

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          sudo apt-get install -y pssh
          sudo ln -s $(which parallel-ssh) /usr/local/bin/pssh
          sudo ln -s $(which parallel-scp) /usr/local/bin/pscp

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          cp integration-tests/ssh-config ~/.ssh/config
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/config
          chmod 644 ~/.ssh/id_rsa.pub

      - name: Start cluster
        id: start_cluster
        run: |
          sudo service ssh restart
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          cat /home/runner/.ssh/config
          cat /etc/ssh/ssh_config
          ssh -v 54.177.165.53  "ls /tmp"
          pushd terraform/aws
          export EXECUTION_TAG=$(git describe --exact-match --tags 2>/dev/null || git rev-parse --short HEAD)-$RANDOM
          terraform init
          terraform workspace new integration-tests-$EXECUTION_TAG
          ./dag --batch autostart  ${{ github.event.inputs.nodeCount }}
          terraform output -json > terraform-output.json
          mv terraform-output.json ../../integration-tests/src/test/resources/
          popd
          echo ::set-output name=tf_workspace::"integration-tests-$EXECUTION_TAG"

      - name: Download keys
        run: |
          mkdir -p keys
          aws s3 cp s3://constellationlabs-dag/keys/key-10.p12 keys/key.p12

      - name: Run tests
        run: |
          echo "---------------------------------------"
          cat integration-tests/src/test/resources/terraform-output.json
          echo "+++++++++++++++++++++++++++++++++++++++"
          sleep 180
          sbt integrationTests/test

      - name: Save logs
        if: ${{ always() }}
        run: |
          mkdir -p /tmp/upload
          while read INSTANCE_IP; do
            mkdir -p "/tmp/upload/$INSTANCE_IP"
            scp -o StrictHostKeyChecking=no -r admin@$ip:/home/admin/constellation/logs/ "/tmp/upload/$INSTANCE_IP/"
          done < terraform/aws/${{ steps.start_cluster.output.tf_workspace }}
          aws s3 sync /tmp/upload/ "s3://constellationlabs-dag/logs/${{ steps.start_cluster.output.tf_workspace }}"

      - name: Destroy the environment
        if: ${{ always() }}
        run: |
          pushd terraform/aws
          terraform destroy -auto-approve
          popd
